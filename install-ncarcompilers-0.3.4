#!/bin/bash
#HPCI ml git

# saving current status of the repo
branch=$(git symbolic-ref --short -q HEAD)
if [ -z "${branch}" ]; then
  tag=$(git name-rev --name-only --tags --no-undefined HEAD 2>/dev/null | sed -n 's/^\([^^~]\{1,\}\)\(\^0\)\{0,1\}$/\1/p')
  branch=tags/${tag}
fi

# switching to desired version
git checkout -q tags/v${HPCI_SW_VERSION}

tag_checkedout=$?
if [ $tag_checkedout -ne 0 ]; then
  echo "Can't checkout version ${HPCI_SW_VERSION} aborting"
  exit $tag_checkedout
fi

# if successfull, create directory and copy relevant files
mkdir -p $HPCI_SW_DIR
for file in *; do
    if [[ $file != install-ncarcompiler* && \
          $file != hpci.*.log &&            \
          $file != test_helper.py &&        \
          $file != test_wrapper.py ]]; then \
      cp -r $file $HPCI_SW_DIR              # preserving symbolic links
    fi
done


if [ -f $HPCI_MOD_DIR/compilers/intel/.version ];
then
   intel_default=`grep ModulesVersion $HPCI_MOD_DIR/compilers/intel/.version | awk '{print $3}' | tr -d '"'`
else
   intel_default_file=`ls $HPCI_MOD_DIR/compilers/intel/ | sort -V | tail -1`
   intel_default=${intel_default_file%.lua}
fi

actual_file=$HPCI_MOD_DIR/intel/$intel_default/$HPCI_SW_NAME/${HPCI_SW_VERSION}.lua

# Create the module with the following template
cat << EOF > $actual_file
require("posix")

-- The message printed by the module whatis command
whatis("ncarcompilers version v$HPCI_SW_VERSION")

-- The message printed by the module help command
help([[
This module loads the NCAR compiler wrappers, that wraps the usual
serial and parallel compilers to include all the required libraries
and header files.
]])

local basepath = "$HPCI_SW_DIR"         -- base path
local mpipath  = basepath .. "/mpi"

setenv("NCAR_EXCLUDE_ASNEEDED", "1")
setenv("NCAR_WRAPPER_MPI", mpipath)

-- Set paths for serial and MPI wrappers
prepend_path("PATH",mpipath)
prepend_path("PATH",basepath)
EOF

echo "-----"
echo Git repository for the modules status, checked in $HPCI_MOD_DIR
git --git-dir=$HPCI_MOD_DIR/.git/ --work-tree=$HPCI_MOD_DIR status

echo "-----"
echo In current directory, you may restore the previous status of the repo with
echo git checkout $branch
echo "-----"
